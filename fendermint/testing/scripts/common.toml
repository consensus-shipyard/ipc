# smoke-test infrastructure:
# cargo install cargo-make
#
# cd fendermint/testing/smoke-test
# - then -
# cargo make --profile ci
# - or -
# cargo make setup
# cargo make test
# docker logs smoke-ethapi
# cargo make teardown

extend = [
    { path = "../../../infra/fendermint/scripts/docker.toml" },
    { path = "../../../infra/fendermint/scripts/cometbft.toml" },
    { path = "../../../infra/fendermint/scripts/ethapi.toml" },
    { path = "../../../infra/fendermint/scripts/fendermint.toml" },
    { path = "../../../infra/fendermint/scripts/promtail.toml" },
    { path = "./fendermint.toml" },
]

[env]
FM_DOCKER_IMAGE = { value = "fendermint:latest", condition = { env_not_set = ["FM_DOCKER_IMAGE"] } }
CMT_P2P_HOST_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh 30000"], condition = { env_not_set = [
    "CMT_P2P_HOST_PORT",
] } }
CMT_RPC_HOST_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh $((CMT_P2P_HOST_PORT+1))"], condition = { env_not_set = [
    "CMT_RPC_HOST_PORT",
] } }
ETHAPI_HOST_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh $((CMT_RPC_HOST_PORT+1))"], condition = { env_not_set = [
    "ETHAPI_HOST_PORT",
] } }
FENDERMINT_METRICS_HOST_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh $((ETHAPI_HOST_PORT+1))"], condition = { env_not_set = [
    "FENDERMINT_METRICS_HOST_PORT",
] } }
OBJECTS_IROH_V4_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh 11204"], condition = { env_not_set = [
    "OBJECTS_IROH_V4_PORT",
] } }
OBJECTS_IROH_V6_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh 11205"], condition = { env_not_set = [
    "OBJECTS_IROH_V6_PORT",
] } }
FENDERMINT_IROH_V4_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh 11214"], condition = { env_not_set = [
    "FENDERMINT_IROH_V4_PORT",
] } }
FENDERMINT_IROH_V6_PORT = { script = ["${ROOT_SCRIPTS_DIR}/get_port.sh 11215"], condition = { env_not_set = [
    "FENDERMINT_IROH_V6_PORT",
] } }

TENDERMINT_RPC_URL = "http://127.0.0.1:${CMT_RPC_HOST_PORT}"
FM_ETH__LISTEN__PORT = "${ETHAPI_HOST_PORT}"

# Define the following in test specific `Makefile.toml` files,
# where `env.env` defines `NETWORK_NAME` and `TEST_DIR`, expected by `common.env`:
# env_files = [
#   { path = "./env.env" },
#   { path = "../Makefile/common.env" },
#   { path = "../Makefile/ci.env", profile = "ci" },
# ]

[tasks.default]
clear = true
run_task = { name = [
    "echo-ports",
    "setup",
    "test",
], fork = true, cleanup_task = "teardown" }

# Waiting before starting the Eth API for the CometBFT websocket to start listening.
[tasks.setup]
dependencies = [
    "create-log-volume",
    "test-data-dir",
    "test-data-env",
    "test-node-dir",
    "docker-network-create",
    "cometbft-init",
    "fendermint-init",
    "fendermint-start",
    "cometbft-start",
    "cometbft-wait",
    "ethapi-start",
    "promtail-start",
    "fendermint-logs",
    "cometbft-logs",
    "ethapi-logs",
]

[tasks.echo-ports]
script = """
echo "CMT_P2P_HOST_PORT: $CMT_P2P_HOST_PORT"
echo "CMT_RPC_HOST_PORT: $CMT_RPC_HOST_PORT"
echo "ETHAPI_HOST_PORT: $ETHAPI_HOST_PORT"
echo "FENDERMINT_METRICS_HOST_PORT: $FENDERMINT_METRICS_HOST_PORT"
echo "FENDERMINT_IROH_RPC_HOST_PORT: $FENDERMINT_IROH_RPC_HOST_PORT"
echo "TENDERMINT_RPC_URL: $TENDERMINT_RPC_URL"
echo "FM_ETH__LISTEN__PORT: $FM_ETH__LISTEN__PORT"
"""

[tasks.test]
dependencies = []

[tasks.teardown]
# `dependencies` doesn't seem to work with `cleanup_task`.
run_task = { name = [
    "cometbft-destroy",
    "fendermint-destroy",
    "ethapi-destroy",
    "promtail-destroy",
    "docker-network-rm",
    "test-data-dir-rm",
    "destroy-log-volume",
] }

[tasks.test-data-dir]
script = """
mkdir -p ${TEST_DATA_DIR}/keys;
cp -r ${TEST_SCRIPTS_DIR} ${TEST_DATA_DIR}/scripts
"""

[tasks.test-data-dir-rm]
script = """
rm -rf ${TEST_DATA_DIR}
"""

[tasks.test-data-env]
script = """
touch ${TEST_DATA_DIR}/.env
"""

[tasks.test-node-dir]
script = """
mkdir -p ${TEST_DATA_DIR}/${NODE_NAME}/fendermint/data/logs;
mkdir -p ${TEST_DATA_DIR}/${NODE_NAME}/cometbft;
mkdir -p ${TEST_DATA_DIR}/${NODE_NAME}/iroh;
"""

[tasks.test-node-dir-rm]
script = """
rm -rf ${TEST_DATA_DIR}/${NODE_NAME}
"""
