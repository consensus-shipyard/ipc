[package]
name = "fendermint_vm_genesis"
description = "Genesis data used to initialize the FVM state when the chain is created"
version = "0.1.0"
authors.workspace = true
edition.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true }
serde = { workspace = true }
serde_with = { workspace = true }
num-traits = { workspace = true }
arbitrary = { workspace = true, optional = true }
quickcheck = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
tendermint = { workspace = true }

cid = { workspace = true, optional = true }
fvm_shared = { workspace = true }
ipc-api = { workspace = true }

fendermint_crypto = { path = "../../crypto" }
fendermint_testing = { path = "../../testing", optional = true }
fendermint_vm_core = { path = "../core" }
fendermint_vm_encoding = { path = "../encoding" }

[dev-dependencies]
quickcheck = { workspace = true }
quickcheck_macros = { workspace = true }
hex = { workspace = true }
serde_json = { workspace = true }

# Enable arb on self for tests.
fendermint_vm_genesis = { path = ".", features = ["arb"] }
fendermint_testing = { path = "../../testing", features = ["golden"] }
fvm_ipld_encoding = { workspace = true }

[features]
default = []
arb = [
  "arbitrary",
  "quickcheck",
  "fvm_shared/arb",
  "fendermint_testing/arb",
  "rand",
  "cid",
]
