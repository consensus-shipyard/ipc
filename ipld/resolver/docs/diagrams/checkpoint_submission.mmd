sequenceDiagram
    participant ParentLotus as Parent Lotus (Validator/Miner)
    participant ParentAgent as IPC Agent (Parent)
    participant ChildAgent as IPC Agent (Child)
    participant FullLotus as Parent Lotus (Full)
    participant ChildLotus as Child Lotus (Validator)
    participant Validator as Validator

    rect rgb(238, 251, 245)
        Note over ParentLotus, ParentAgent: Parent Subnet Validator
    end
    rect rgb(254, 239, 236)
        Note over ChildAgent, Validator: Child Subnet Validator
    end

    %% Initialize
    Note over ParentLotus, Validator: Initialize

    rect rgb(238, 251, 245)
        ParentAgent->>ParentLotus: subscribe
    end

    rect rgb(254, 239, 236)
        Validator->>ChildLotus: start
        Validator->>FullLotus: start
        Validator->>ChildAgent: start

        ChildAgent->>FullLotus: subscribe
        ChildAgent->>ChildLotus: subscribe

        Validator->>+ChildAgent: join subnet
    end
    rect rgb(238, 251, 245)
        ChildAgent->>-ParentLotus: join subnet
        ParentLotus->>ParentLotus: create block and<br/>execute transaction
    end

    %% During Epoch
    Note over ParentLotus, Validator: During Epoch

    loop Every Block
        rect rgb(238, 251, 245)
            ParentLotus-->>FullLotus: broadcast block
        end
        alt if contains top-down messages
            rect rgb(254, 239, 236)
                FullLotus-->>ChildAgent: observe finalized top-down message
                ChildAgent->>ChildLotus: submit finalized top-down message
                ChildLotus->>ChildAgent: is finalized on parent?
                Note right of ChildAgent: Check messages proposed by others.
            end
        end

        alt if has power to create block
            rect rgb(254, 239, 236)
                ChildLotus->>ChildLotus: create block
            end
        end

        rect rgb(254, 239, 236)
            ChildLotus->>ChildLotus: receive block
        end
    end

    %% End of Epoch
    Note over ParentLotus, Validator: End of Epoch

    rect rgb(254, 239, 236)
        ChildLotus->>ChildLotus: next block producer<br/>creates checkpoint
        Note left of ChildLotus: Ledger rules dictate<br/>checkpoint contents.
        ChildLotus-->>ChildAgent: observe checkpoint

        alt if validator in epoch
            ChildAgent->>ChildLotus: submit signature over checkpoint
        end

        loop Accumulate Signatures
            ChildLotus->>ChildLotus: create block
            Note left of ChildLotus: Accumulate signatures<br/>in the ledger.
            Note over ChildLotus: ... wait for quorum of signatures ...
        end

        ChildLotus-->>ChildAgent: observe quorum
    end
    rect rgb(238, 251, 245)
        ChildAgent->>ParentLotus: submit checkpoint with quorum certificate

        ParentLotus->>+ParentAgent: resolve checkpoint CID
    end
    rect rgb(254, 239, 236)
        ParentAgent->>+ChildAgent: resolve checkpoint CID
        Note right of ChildAgent: This is where the IPLD Resolver<br/>comes into play.
        ChildAgent->>ChildLotus: fetch checkpoint contents
        ChildAgent->>-ParentAgent: checkpoint contents
    end
    rect rgb(238, 251, 245)
        ParentAgent->>-ParentLotus: checkpoint contents

        ParentLotus->>ParentLotus: create block and<br/>execute checkpoint
        ParentLotus-->>FullLotus: broadcast block
    end