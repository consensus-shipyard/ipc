########################################################################################################################
# Subnet peers
########################################################################################################################

[tasks.bootstrap]
env = { "NETWORK_NAME" = "${NETWORK_NAME}", "CMT_DIR" = "${BASE_DIR}/bootstrap/cometbft" }
run_task = "new-bootstrap"

[tasks.new-bootstrap]
dependencies = [
    "bootstrap-down",
    "fendermint-pull",
    "node-init",
    "docker-network-create",
    "cometbft-config",
    "seed-enable",
    "fendermint-deps",
    "subnet-config",
    "fendermint-start-subnet",
    "cometbft-start",
    # "cometbft-wait",
    "cometbft-node-id",
    "node-report",
]

[tasks.bootstrap-node-id]
run_task = "cometbft-node-id"

[tasks.bootstrap-down]
dependencies = [
    "cometbft-destroy",
    "fendermint-destroy",
]

[tasks.bootstrap-restart]
dependencies = [
    "cometbft-stop",
    "fendermint-stop",
    "fendermint-start-subnet",
    "cometbft-start",
    "cometbft-wait",
]

[tasks.child-validator-down]
run_task = "testnode-down"

[tasks.child-validator]
workspace = false
dependencies = [
    "testnode-down",
    "fendermint-pull",
    "node-init",
    "docker-network-create",
    "cometbft-config",
    "fendermint-deps",
    "validator-config",
    "fendermint-start-validator",
    "cometbft-start",
    "cometbft-wait",
    "ethapi-start",
    "node-report",
]

[tasks.child-validator-restart]
run_task = { name = [
    "cometbft-stop",
    "fendermint-stop",
    "ethapi-stop",
    "fendermint-start-validator",
    "cometbft-start",
    "cometbft-wait",
    "ethapi-start",
] }

[tasks.child-fullnode-down]
run_task = "testnode-down"

[tasks.child-fullnode-restart]
run_task = "testnode-restart"

[tasks.child-fullnode]
workspace = false
dependencies = [
    "testnode-down",
    "fendermint-pull",
    "node-init",
    "docker-network-create",
    "cometbft-config",
    "fendermint-deps",
    "subnet-config",
    "fendermint-start-subnet",
    "cometbft-start",
    "cometbft-wait",
    "ethapi-start",
    "node-report",
]

[tasks.subnet-config]
dependencies = [
    "subnet-fetch-genesis",
    "genesis-write",
]

[tasks.validator-config]
dependencies = [
    "subnet-config",
    "subnet-convert-eth-key",
    "testnode-export-keys",
]

[tasks.subnet-convert-eth-key]
extend = "fendermint-tool"
env = { "ENTRY" = "fendermint", "CMD" = "key eth-to-fendermint --secret-key /data/${NODE_NAME}/${KEYS_SUBDIR}/eth.sk --name validator_key --out-dir /data/${NODE_NAME}/${KEYS_SUBDIR}" }
script.pre = "mkdir ${BASE_DIR}/${NODE_NAME}/${KEYS_SUBDIR}; cp ${PRIVATE_KEY_PATH} ${BASE_DIR}/${NODE_NAME}/keys/eth.sk"

[tasks.subnet-fetch-genesis]
extend = "fendermint-tool"
env = { "ENTRY" = "fendermint", "CMD" = "genesis --genesis-file /data/genesis.json ipc from-parent --subnet-id ${SUBNET_ID} -p ${PARENT_ENDPOINT}  --parent-gateway ${PARENT_GATEWAY}  --parent-registry ${PARENT_REGISTRY} --base-fee ${BASE_FEE} --power-scale ${POWER_SCALE}" }

[tasks.node-report]
script = """cat << EOF
#################################
#                               #
# Subnet node ready! ðŸš€         #
#                               #
#################################

Subnet ID:
\t${SUBNET_ID}

Eth API:
\thttp://0.0.0.0:${ETHAPI_HOST_PORT}

Chain ID:
\t$(curl -s --location --request POST 'http://localhost:8545/' --header 'Content-Type: application/json' --data-raw '{ "jsonrpc":"2.0", "method":"eth_chainId", "params":[], "id":1 }' | jq -r '.result' | xargs printf "%d")

Fendermint API:
\thttp://localhost:26658

CometBFT API:
\thttp://0.0.0.0:${CMT_RPC_HOST_PORT}

CometBFT node ID:
\t$(docker exec ${CMT_CONTAINER_NAME} cometbft show-node-id)

CometBFT P2P:
\thttp://0.0.0.0:${CMT_P2P_HOST_PORT}
EOF
"""
