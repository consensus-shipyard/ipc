name: Fendermint CI - Test

# This workflow is triggered from the main CI workflow.
on:
  workflow_call:

env:
  CARGO_INCREMENTAL: '0'
  SCCACHE_CACHE_SIZE: 10G
  CC: "sccache clang"
  CXX: "sccache clang++"
  PROFILE: "ci"
  BUILDX_FLAGS: "--cache-from=type=gha --cache-to=type=gha,mode=max"

jobs:
  # Check code formatting; anything that doesn't require compilation.
  pre-compile-checks:
    name: Pre-compile checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out the project
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check code formatting
        run: cd fendermint && make check-fmt


  # Test matrix, running tasks from the Makefile.
  tests:
    # Skip tests on draft PRs, they take a long time, and drafts are for visibility.
    if: ${{ !github.event.pull_request.draft }}
    needs: [pre-compile-checks]
    name: ${{ matrix.make.name }} (${{ matrix.os }}, ${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        make:
          - name: Clippy
            task: check-clippy
          - name: Test
            task: test
          - name: End-to-End
            task: e2e
        exclude:
          # Not running Clippy on nightly because sometimes it seems to give false positives.
          - rust: nightly
            make:
              name: Clippy
          - rust: nightly
            make:
              name: End-to-end

    env:
      RUST_BACKTRACE: full
      RUSTFLAGS: -Dwarnings

    steps:
      - name: Check out the project
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Tools
        uses: ./.github/actions/install-tools
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          rust: ${{ matrix.rust }}

      - name: Setup Cache
        uses: ./.github/actions/setup-cache
        timeout-minutes: 5
        continue-on-error: true
        with:
          # Caching everything separately, in case they don't ask for the same things to be compiled.
          cache-prefix: fendermint-${{ matrix.make.name }}-${{ matrix.os }}-${{ matrix.rust }}-${{ hashFiles('rust-toolchain', 'rust-toolchain.toml') }}
          cache-suffix: ${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Solidity ABI artifacts
        uses: actions/cache@v2
        with:
          path: ./contracts/out
          key: contracts-abi-${{ hashFiles('./contracts/src/**/*.sol') }}

      # Pull the latest docker image. Its layers might be reused during the build.
      - name: Docker Pull
        run: docker pull ghcr.io/consensus-shipyard/fendermint:latest

      - name: ${{ matrix.make.name }}
        env:
          PROMTAIL_CLIENT_URL: ${{ secrets.PROMTAIL_CLIENT_URL }}
        run: cd fendermint && make ${{ matrix.make.task }}